{"is_source_file": true, "format": "TypeScript", "description": "This file defines API routes related to user activities within an Express.js application, including endpoints for fetching recent activities, creating synthetic activities for testing, and seeding sample activity data. It handles authentication, validation, and interaction with activity service and session models.", "external_files": ["../middleware/auth.js", "../middleware/clerkAuth.js", "../services/activityService.js", "../utils/debug.js", "../models/Session.js"], "external_methods": ["requireRole", "createActivity", "listRecentActivities", "debugLog"], "published": ["router"], "classes": [{"name": "Session", "description": "Mongoose model for session data used in activity seeding."}], "methods": [{"name": "'/recent'", "description": "GET endpoint to retrieve recent activities, with authentication middleware."}, {"name": "POST '/'", "description": "POST endpoint to create a synthetic activity, admin only, with input validation."}, {"name": "'/seed'", "description": "POST endpoint to seed sample sessions and activities for testing, admin only."}], "calls": ["listRecentActivities(limit)", "createActivity(value)", "Session.create({ ... })", "createActivity(payload)"], "search-terms": ["activities", "activity routes", "activity API", "seed activity data", "recent activities", "create activity"], "state": 2, "file_id": 30, "knowledge_revision": 203, "git_revision": "105da31c9a2b6c7cca7d8fc64437b3a3c165127c", "revision_history": [{"62": ""}, {"123": "6241b6678d4ba4937d8c14a0c734b886660ccbf2"}, {"195": "165f8da04793b3a966670fe5bebb1452e0132553"}, {"203": "105da31c9a2b6c7cca7d8fc64437b3a3c165127c"}], "ctags": [{"_type": "tag", "name": "basePages", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const basePages = ['\\/', '\\/dashboard', '\\/settings', '\\/users'];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "created", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const created = await Promise.all(eventsPayload.map((payload) => createActivity(payload as a/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "created", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const created = await createActivity(value as any);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "device", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^      const device = deviceCombos[i % deviceCombos.length];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "deviceCombos", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const deviceCombos = [$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^  const { error, value } = schema.validate(req.body);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "eventsPayload", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const eventsPayload = [];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "i", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^      const device = deviceCombos[i % deviceCombos.length];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "i", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^      const location = locations[i % locations.length];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "i", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    for (let i = 0; i < 24; i++) {$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^  const items = await listRecentActivities(limit);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "limit", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^  const limit = Math.min(parseInt((req.query.limit as string) || '50', 10), 200);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "location", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^      const location = locations[i % locations.length];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "locations", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const locations = [$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const now = new Date();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "occurredAt", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^      const occurredAt = new Date(now.getTime() - i * 5 * 60 * 1000); \\/\\/ every 5 minutes$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^const router = Router();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "schema", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^  const schema = Joi.object({$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "session", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const session = await Session.create({$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "value", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^  const { error, value } = schema.validate(req.body);$/", "language": "TypeScript", "kind": "constant"}], "hash": "dfc9e6617c3bbf4fa4776814f1fff10b", "format-version": 4, "code-base-name": "frontend_dashboard", "filename": "backend_api/src/routes/activities.ts", "fields": [{"name": "for (let i = 0; i < 24; i++) {", "scope": "", "scopeKind": "", "description": "unavailable"}]}