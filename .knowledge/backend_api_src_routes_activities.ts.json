{"is_source_file": true, "format": "TypeScript", "description": "This file defines Express route handlers for activity-related API endpoints including retrieving recent activities, tracking new activity events, creating synthetic activities, and seeding sample data for testing. It imports middleware, services, models, and utilities to implement these functionalities.", "external_files": ["../middleware/auth.js", "../middleware/clerkAuth.js", "../services/activityService.js", "../utils/debug.js", "../models/Session.js"], "external_methods": ["requireRole", "createActivity", "listRecentActivities", "trackEvent", "debugLog", "Session.create"], "published": [], "classes": [], "methods": [{"name": "GET /api/activities/recent", "description": "Returns a list of recent activity events, requires Clerk authentication."}, {"name": "POST /api/activities/track", "description": "Tracks an analytics event and associates it with a user session, requires Clerk authentication."}, {"name": "POST /api/activities", "description": "Creates a synthetic activity record, restricted to admin users."}, {"name": "POST /api/activities/seed", "description": "Seeds the database with sample session and activity data for testing, restricted to admin users."}], "calls": ["listRecentActivities", "trackEvent", "createActivity", "Session.create", "debugLog"], "search-terms": ["activities", "activity tracking", "seed data", "admin post activities", "recent activity", "middleware/auth", "middleware/clerkAuth", "session seed", "test data"], "state": 2, "file_id": 30, "knowledge_revision": 351, "git_revision": "41d6a799d376c30345872a00141e1460d30330b1", "revision_history": [{"62": ""}, {"123": "6241b6678d4ba4937d8c14a0c734b886660ccbf2"}, {"195": "165f8da04793b3a966670fe5bebb1452e0132553"}, {"203": "105da31c9a2b6c7cca7d8fc64437b3a3c165127c"}, {"351": "41d6a799d376c30345872a00141e1460d30330b1"}], "ctags": [{"_type": "tag", "name": "basePages", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const basePages = ['\\/', '\\/dashboard', '\\/settings', '\\/users'];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "created", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const created = await Promise.all(eventsPayload.map((payload) => createActivity(payload as a/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "created", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const created = await createActivity(value as any);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "device", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^      const device = deviceCombos[i % deviceCombos.length];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "deviceCombos", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const deviceCombos = [$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const { id: clerkUserId, email } = req.user!;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^  const { error, value } = schema.validate(req.body);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "eventsPayload", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const eventsPayload = [];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "i", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^      const device = deviceCombos[i % deviceCombos.length];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "i", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^      const location = locations[i % locations.length];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "i", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    for (let i = 0; i < 24; i++) {$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const { id: clerkUserId, email } = req.user!;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^  const items = await listRecentActivities(limit);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "limit", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^  const limit = Math.min(parseInt((req.query.limit as string) || '50', 10), 200);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "location", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^      const location = locations[i % locations.length];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "locations", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const locations = [$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const now = new Date();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "occurredAt", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^      const occurredAt = new Date(now.getTime() - i * 5 * 60 * 1000); \\/\\/ every 5 minutes$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const result = await trackEvent({$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^const router = Router();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "schema", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^  const schema = Joi.object({$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "session", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^    const session = await Session.create({$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "value", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/activities.ts", "pattern": "/^  const { error, value } = schema.validate(req.body);$/", "language": "TypeScript", "kind": "constant"}], "hash": "e480de034062a742174abca2ef58bb2d", "format-version": 4, "code-base-name": "frontend_dashboard", "filename": "backend_api/src/routes/activities.ts", "fields": [{"name": "for (let i = 0; i < 24; i++) {", "scope": "", "scopeKind": "", "description": "unavailable"}]}