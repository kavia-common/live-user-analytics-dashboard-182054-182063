{"is_source_file": true, "format": "TypeScript", "description": "This file defines two exported functions for managing user data within a backend API. It includes functions to list users with pagination and to update a user's role, interacting with a User model likely based on a MongoDB schema.", "external_files": ["../models/User.js"], "external_methods": ["User.find", "User.countDocuments", "User.findByIdAndUpdate"], "published": ["listUsers", "updateUserRole"], "classes": [], "methods": [{"name": "export async function listUsers(page = 1, limit = 20) { listUsers", "description": "Returns a paginated list of users, including their IDs, emails, names, roles, last login time, and creation & update timestamps.", "scope": "", "scopeKind": ""}, {"name": "export async function updateUserRole(userId: string, role: 'admin' | 'user') { updateUserRole", "description": "Updates the role of a specified user (admin only), throwing an error if the user is not found.", "scope": "", "scopeKind": ""}], "calls": ["Promise.all", "User.find", "User.countDocuments", "User.findByIdAndUpdate"], "search-terms": ["listUsers", "userService", "updateUserRole", "pagination", "User model", "MongoDB"], "state": 2, "file_id": 25, "knowledge_revision": 52, "git_revision": "", "ctags": [{"_type": "tag", "name": "err", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/userService.ts", "pattern": "/^    const err: any = new Error('User not found');$/", "language": "TypeScript", "kind": "constant", "scope": "updateUserRole", "scopeKind": "function"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/userService.ts", "pattern": "/^  const [items, total] = await Promise.all([$/", "language": "TypeScript", "kind": "constant", "scope": "listUsers", "scopeKind": "function"}, {"_type": "tag", "name": "listUsers", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/userService.ts", "pattern": "/^export async function listUsers(page = 1, limit = 20) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "skip", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/userService.ts", "pattern": "/^  const skip = (page - 1) * limit;$/", "language": "TypeScript", "kind": "constant", "scope": "listUsers", "scopeKind": "function"}, {"_type": "tag", "name": "total", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/userService.ts", "pattern": "/^  const [items, total] = await Promise.all([$/", "language": "TypeScript", "kind": "constant", "scope": "listUsers", "scopeKind": "function"}, {"_type": "tag", "name": "updateUserRole", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/userService.ts", "pattern": "/^export async function updateUserRole(userId: string, role: 'admin' | 'user') {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/userService.ts", "pattern": "/^  const updated = await User.findByIdAndUpdate(userId, { role }, { new: true });$/", "language": "TypeScript", "kind": "constant", "scope": "updateUserRole", "scopeKind": "function"}], "hash": "b337e721a9e436ec83a00fd0dd8affb5", "format-version": 4, "code-base-name": "frontend_dashboard", "filename": "backend_api/src/services/userService.ts", "revision_history": [{"52": ""}]}