{"is_source_file": true, "format": "TypeScript", "description": "This file defines and initializes a WebSocket server using socket.io, with JWT authentication middleware for a '/realtime' namespace, and handles socket connections and events.", "external_files": ["../config/env.js", "../utils/debug.js"], "external_methods": ["getEnv", "debugLog", "debugError"], "published": ["initSocket"], "classes": [], "methods": [{"name": "export function initSocket(httpServer: HttpServer, corsOrigin: string, socketPath: string): { io/ initSocket", "description": "Initializes a socket.io server with CORS configuration and JWT authentication middleware on the '/realtime' namespace, returning the socket.io server instance and namespace.", "scope": "", "scopeKind": ""}], "calls": ["getEnv", "jwt.verify", "debugLog", "debugError"], "search-terms": ["socket.io", "JWT auth", "realtime namespace", "socket connection", "typescript socket server"], "state": 2, "file_id": 32, "knowledge_revision": 122, "git_revision": "6241b6678d4ba4937d8c14a0c734b886660ccbf2", "revision_history": [{"68": "6241b6678d4ba4937d8c14a0c734b886660ccbf2"}, {"122": "6241b6678d4ba4937d8c14a0c734b886660ccbf2"}], "ctags": [{"_type": "tag", "name": "JWT_SECRET", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^  const { JWT_SECRET } = getEnv();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "RealTimeChannels", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^export interface RealTimeChannels {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "SocketAuthPayload", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^export interface SocketAuthPayload {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "authHeader", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^      const authHeader = (socket.handshake.auth?.token as string | undefined) || (socket.handsha/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^  email: string;$/", "language": "TypeScript", "kind": "property", "scope": "SocketAuthPayload", "scopeKind": "interface"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^  id: string;$/", "language": "TypeScript", "kind": "property", "scope": "SocketAuthPayload", "scopeKind": "interface"}, {"_type": "tag", "name": "initSocket", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^export function initSocket(httpServer: HttpServer, corsOrigin: string, socketPath: string): { io/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "io", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^  const io = new SocketIOServer(httpServer, {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "payload", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^      const payload = jwt.verify(token, JWT_SECRET) as SocketAuthPayload & { iat: number; exp: n/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "realtime", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^  const realtime = io.of('\\/realtime');$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "realtimeNamespace", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^  realtimeNamespace: Namespace;$/", "language": "TypeScript", "kind": "property", "scope": "RealTimeChannels", "scopeKind": "interface"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^  role: 'admin' | 'user';$/", "language": "TypeScript", "kind": "property", "scope": "SocketAuthPayload", "scopeKind": "interface"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^      let token: string | null = null;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "tokenFromQuery", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^      const tokenFromQuery = socket.handshake.query?.token as string | undefined;$/", "language": "TypeScript", "kind": "constant"}], "hash": "a451ee72fda3cea51d4f55b86ac98830", "format-version": 4, "code-base-name": "frontend_dashboard", "filename": "backend_api/src/realtime/socket.ts", "fields": [{"name": "export interface RealTimeChannels {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface SocketAuthPayload {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "email: string;", "scope": "SocketAuthPayload", "scopeKind": "interface", "description": "unavailable"}, {"name": "id: string;", "scope": "SocketAuthPayload", "scopeKind": "interface", "description": "unavailable"}, {"name": "realtimeNamespace: Namespace;", "scope": "RealTimeChannels", "scopeKind": "interface", "description": "unavailable"}, {"name": "role: 'admin' | 'user';", "scope": "SocketAuthPayload", "scopeKind": "interface", "description": "unavailable"}, {"name": "let token: string | null = null;", "scope": "", "scopeKind": "", "description": "unavailable"}]}