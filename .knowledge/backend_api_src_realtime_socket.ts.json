{"is_source_file": true, "format": "TypeScript", "description": "This source file initializes a Socket.io server with CORS and Clerk authentication for a real-time namespace, handling socket connections and middleware authentication.", "external_files": ["http", "socket.io", "@clerk/clerk-sdk-node", "../config/env.js", "../utils/debug.js"], "external_methods": ["getAuth"], "published": ["initSocket"], "classes": [], "methods": [{"name": "export function initSocket(httpServer: HttpServer, corsOrigin: string | string[], socketPath: st/ initSocket", "description": "Initializes the Socket.io server with CORS settings and Clerk JWT authentication middleware on the /realtime namespace, returning the server and the namespace channels.", "scope": "", "scopeKind": ""}], "calls": ["getEnv", "getAuth", "debugLog", "debugError"], "search-terms": ["socket.io", "Clerk authentication", "/realtime namespace", "socket initialization", "TypeScript socket server"], "state": 2, "file_id": 32, "knowledge_revision": 355, "git_revision": "f1a3a3ff50244d6d907c46a5b988e9bb9b630198", "revision_history": [{"68": "6241b6678d4ba4937d8c14a0c734b886660ccbf2"}, {"122": "6241b6678d4ba4937d8c14a0c734b886660ccbf2"}, {"341": "165f8da04793b3a966670fe5bebb1452e0132553"}, {"346": "70f4d239a2da822115d647d15a3178adf230ab4d"}, {"355": "f1a3a3ff50244d6d907c46a5b988e9bb9b630198"}], "ctags": [{"_type": "tag", "name": "ADMIN_EMAILS", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^  const { ADMIN_EMAILS } = getEnv();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "RealTimeChannels", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^export interface RealTimeChannels {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "auth", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^      const auth = getAuth(fakeReq);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "authHeaderToken", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^      const authHeaderToken = (socket.handshake.auth?.token as string | undefined) || '';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "bearer", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^      let bearer = authHeaderToken || tokenFromQuery || headerAuth || '';$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "claims", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^      const claims = (auth as any).sessionClaims || {};$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^      const email: string =$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "fakeReq", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^      const fakeReq: any = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "headerAuth", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^      const headerAuth = (socket.handshake.headers?.authorization as string | undefined) || '';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "initSocket", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^export function initSocket(httpServer: HttpServer, corsOrigin: string | string[], socketPath: st/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "io", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^  const io = new SocketIOServer(httpServer, {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "realtime", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^  const realtime = io.of('\\/realtime');$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "realtimeNamespace", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^  realtimeNamespace: Namespace;$/", "language": "TypeScript", "kind": "property", "scope": "RealTimeChannels", "scopeKind": "interface"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^      const role: 'admin' | 'user' = email && ADMIN_EMAILS.has(String(email).toLowerCase()) ? 'a/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "tokenFromQuery", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/realtime/socket.ts", "pattern": "/^      const tokenFromQuery = (socket.handshake.query?.token as string | undefined) || '';$/", "language": "TypeScript", "kind": "constant"}], "hash": "6f990e5161fbd91383e97ef139dad4f6", "format-version": 4, "code-base-name": "frontend_dashboard", "filename": "backend_api/src/realtime/socket.ts", "fields": [{"name": "export interface RealTimeChannels {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let bearer = authHeaderToken || tokenFromQuery || headerAuth || '';", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "realtimeNamespace: Namespace;", "scope": "RealTimeChannels", "scopeKind": "interface", "description": "unavailable"}]}