{"is_source_file": true, "format": "JavaScript/JSX", "description": "This file defines React context and components for authentication management, utilizing Clerk authentication hooks, providing a context for auth state, roles, tokens, and refresh logic within a React application.", "external_files": ["../api/client", "@clerk/clerk-react"], "external_methods": ["useAuth", "useUser", "setAuthTokenProvider"], "published": ["AuthProvider", "useAuthContext", "AuthContext"], "classes": [], "methods": [{"name": "deriveAdminFromEmail(email)", "description": "Helper function to determine if an email belongs to an admin based on environment-configured admin emails.", "scope": "", "scopeKind": ""}, {"name": "fetchMe(signal)", "description": "Async function to fetch user profile and role from backend API at /auth/me.", "scope": "", "scopeKind": ""}, {"name": "AuthProvider({ children })", "description": "React component providing authentication context, managing token refresh, and integrating with Clerk and backend API.", "scope": "", "scopeKind": ""}, {"name": "useAuthContext()", "description": "Custom React hook to access authentication context.", "scope": "", "scopeKind": ""}], "calls": ["apiClient.get('/auth/me')", "setAuthTokenProvider", "getToken", "useState", "useEffect", "useCallback", "useRef", "useMemo", "signOut", "fetchMe", "deriveAdminFromEmail"], "search-terms": ["AuthContext", "AuthProvider", "Clerk useAuth", "Clerk useUser", "auth token management", "React context for auth", "fetch user profile", "admin role determination"], "state": 2, "file_id": 37, "knowledge_revision": 357, "git_revision": "12a3419120c45719d9db419ae35bf3ee55a23818", "revision_history": [{"153": "53903b2c9a7dc12f10acc7df0a00db01a40c7f48"}, {"184": "2fa45b23bd36280c7df585c710dda7fb239ef0c2"}, {"188": "11d50197e53d7157ed6aa46363c33bb6764425be"}, {"215": "11d50197e53d7157ed6aa46363c33bb6764425be"}, {"327": "1238896bdac3cc5cb82b3b4554b9ae9f517520eb"}, {"331": "1238896bdac3cc5cb82b3b4554b9ae9f517520eb"}, {"332": "1238896bdac3cc5cb82b3b4554b9ae9f517520eb"}, {"357": "12a3419120c45719d9db419ae35bf3ee55a23818"}], "ctags": [{"_type": "tag", "name": "AuthContext", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/src/context/AuthContext.jsx", "pattern": "/^const AuthContext = createContext({$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "AuthProvider", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/src/context/AuthContext.jsx", "pattern": "/^export function AuthProvider({ children }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ children })"}, {"_type": "tag", "name": "deriveAdminFromEmail", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/src/context/AuthContext.jsx", "pattern": "/^function deriveAdminFromEmail(email) {$/", "language": "JavaScript", "kind": "function", "signature": "(email)"}, {"_type": "tag", "name": "fetchMe", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/src/context/AuthContext.jsx", "pattern": "/^async function fetchMe(signal) {$/", "language": "JavaScript", "kind": "function", "signature": "(signal)"}, {"_type": "tag", "name": "useAuthContext", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/src/context/AuthContext.jsx", "pattern": "/^export function useAuthContext() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "value", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/src/context/AuthContext.jsx", "pattern": "/^  return <AuthContext.Provider value={value}>{children}<\\/AuthContext.Provider>;$/", "language": "JavaScript", "kind": "field", "scope": "Provider", "scopeKind": "class"}], "hash": "fdad6c1e0c6162bfa97ec8e12efdc2e4", "format-version": 4, "code-base-name": "frontend_dashboard", "filename": "frontend_dashboard/src/context/AuthContext.jsx", "fields": [{"name": "return <AuthContext.Provider value={value}>{children}<\\/AuthContext.Provider>;", "scope": "Provider", "scopeKind": "class", "description": "unavailable"}]}