{"is_source_file": true, "format": "TypeScript (Node.js/Express)", "description": "This file sets up an Express.js application server, configuring middleware for security, CORS, logging, rate limiting, and defining route handlers as well as a health check endpoint.", "external_files": ["./routes/auth.js", "./routes/users.js", "./routes/activities.js", "./routes/stats.js", "./middleware/error.js", "./config/env.js", "./utils/debug.js"], "external_methods": ["getEnv", "errorHandler", "debugLog"], "published": ["createApp"], "classes": [], "methods": [{"name": "export function createApp() { createApp", "description": "Constructs and returns an Express application with configured middleware, routes, and error handling.", "scope": "", "scopeKind": ""}], "calls": ["helmet()", "cors()", "app.use(helmet())", "app.use(cors({...}))", "app.use(express.json({ limit: '1mb' }))", "app.use(morgan('dev'))", "debugLog('cors', 'Configured CORS origins', ...)", "rateLimit({ windowMs: 60*1000, max: 120, ... })", "app.use('/api', limiter)", "app.get('/health', ...)", "app.use('/api/auth', authRoutes)", "app.use('/api/users', usersRoutes)", "app.use('/api/activities', activitiesRoutes)", "app.use('/api/stats', statsRoutes)", "app.use(errorHandler)"], "search-terms": ["createApp", "Health endpoint", "middleware", "rateLimit", "Express application", "CORS configuration"], "state": 2, "file_id": 34, "knowledge_revision": 121, "git_revision": "4efa6797c91bc288cd6ce83425f37f84e758ce67", "revision_history": [{"71": "6241b6678d4ba4937d8c14a0c734b886660ccbf2"}, {"113": "6241b6678d4ba4937d8c14a0c734b886660ccbf2"}, {"121": "4efa6797c91bc288cd6ce83425f37f84e758ce67"}], "ctags": [{"_type": "tag", "name": "CORS_ORIGIN", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^  const { CORS_ORIGIN } = getEnv();$/", "language": "TypeScript", "kind": "constant", "scope": "createApp", "scopeKind": "function"}, {"_type": "tag", "name": "allowed", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^        const allowed = Array.isArray(CORS_ORIGIN) ? CORS_ORIGIN : [CORS_ORIGIN as any];$/", "language": "TypeScript", "kind": "constant", "scope": "createApp", "scopeKind": "function"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^  const app = express();$/", "language": "TypeScript", "kind": "constant", "scope": "createApp", "scopeKind": "function"}, {"_type": "tag", "name": "createApp", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^export function createApp() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "limiter", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^  const limiter = rateLimit({$/", "language": "TypeScript", "kind": "constant", "scope": "createApp", "scopeKind": "function"}], "hash": "e6ad663fffe3f8ffee533637875a8fec", "format-version": 4, "code-base-name": "frontend_dashboard", "filename": "backend_api/src/app.ts"}