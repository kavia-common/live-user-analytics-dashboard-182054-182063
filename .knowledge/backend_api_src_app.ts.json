{"is_source_file": true, "format": "TypeScript", "description": "This file sets up an Express.js server application, configuring middleware such as security (helmet), CORS, logging (morgan), rate limiting, and routing for various API endpoints including authentication, users, activities, and stats. It also includes a health check endpoint and error handling.", "external_files": ["./routes/auth.js", "./routes/users.js", "./routes/activities.js", "./routes/stats.js", "./middleware/error.js", "./config/env.js", "./utils/debug.js"], "external_methods": ["getEnv", "errorHandler", "debugLog"], "published": ["createApp"], "classes": [], "methods": [{"name": "export function createApp() { createApp", "description": "Constructs and configures an Express application with middleware and route handlers, returning the app instance.", "scope": "", "scopeKind": ""}], "calls": ["express()", "helmet()", "cors(corsOptions)", "app.options()", "express.json()", "morgan()", "debugLog()", "rateLimit()", "app.get('/health')", "app.use()", "errorHandler"], "search-terms": ["Express server setup", "CORS configuration", "Health check endpoint", "Rate limiting middleware", "Route handlers setup", "Error handling middleware", "TypeScript Express app"], "state": 2, "file_id": 34, "knowledge_revision": 125, "git_revision": "165f8da04793b3a966670fe5bebb1452e0132553", "revision_history": [{"71": "6241b6678d4ba4937d8c14a0c734b886660ccbf2"}, {"113": "6241b6678d4ba4937d8c14a0c734b886660ccbf2"}, {"121": "4efa6797c91bc288cd6ce83425f37f84e758ce67"}, {"125": "165f8da04793b3a966670fe5bebb1452e0132553"}], "ctags": [{"_type": "tag", "name": "CORS_ORIGIN", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^  const { CORS_ORIGIN, NODE_ENV } = getEnv();$/", "language": "TypeScript", "kind": "constant", "scope": "createApp", "scopeKind": "function"}, {"_type": "tag", "name": "NODE_ENV", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^  const { CORS_ORIGIN, NODE_ENV } = getEnv();$/", "language": "TypeScript", "kind": "constant", "scope": "createApp", "scopeKind": "function"}, {"_type": "tag", "name": "allowed", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^  const allowed = Array.isArray(CORS_ORIGIN) ? CORS_ORIGIN : [CORS_ORIGIN as any];$/", "language": "TypeScript", "kind": "constant", "scope": "createApp", "scopeKind": "function"}, {"_type": "tag", "name": "allowed", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^  const effectiveAllowed = NODE_ENV === 'production' ? allowed : Array.from(new Set([...allowed,/", "language": "TypeScript", "kind": "constant", "scope": "createApp", "scopeKind": "function"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^  const app = express();$/", "language": "TypeScript", "kind": "constant", "scope": "createApp", "scopeKind": "function"}, {"_type": "tag", "name": "corsOptions", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^  const corsOptions: cors.CorsOptions = {$/", "language": "TypeScript", "kind": "constant", "scope": "createApp", "scopeKind": "function"}, {"_type": "tag", "name": "createApp", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^export function createApp() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "devDefaults", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^  const devDefaults = ['http:\\/\\/localhost:3000', 'http:\\/\\/127.0.0.1:3000'];$/", "language": "TypeScript", "kind": "constant", "scope": "createApp", "scopeKind": "function"}, {"_type": "tag", "name": "effectiveAllowed", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^  const effectiveAllowed = NODE_ENV === 'production' ? allowed : Array.from(new Set([...allowed,/", "language": "TypeScript", "kind": "constant", "scope": "createApp", "scopeKind": "function"}, {"_type": "tag", "name": "limiter", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/app.ts", "pattern": "/^  const limiter = rateLimit({$/", "language": "TypeScript", "kind": "constant"}], "hash": "e625e7ecd72c532154abbc5a97715144", "format-version": 4, "code-base-name": "frontend_dashboard", "filename": "backend_api/src/app.ts"}