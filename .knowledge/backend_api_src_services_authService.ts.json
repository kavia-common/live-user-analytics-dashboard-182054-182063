{"is_source_file": true, "format": "TypeScript", "description": "This file provides authentication services, including token generation, user signup, login, and user data sanitization, interacting with user models and JWT.", "external_files": ["../config/env.js", "../models/User.js"], "external_methods": ["getEnv()", "User.findOne()", "createUserWithPassword()", "user.comparePassword()", "user.save()"], "published": ["generateToken", "signup", "login", "sanitizeUser"], "classes": [], "methods": [{"name": "export function generateToken(user: IUser): string { generateToken", "description": "Issues a JWT for the provided user, with a 12-hour expiry.", "scope": "", "scopeKind": ""}, {"name": "export async function signup(params: { email: string; password: string; name?: string; role?: 'a/ signup", "description": "Registers a new user with email, password, and optional name and role, returning a token and user data.", "scope": "", "scopeKind": ""}, {"name": "export async function login(params: { email: string; password: string }) { login", "description": "Authenticates user credentials and returns a token and sanitized user data.", "scope": "", "scopeKind": ""}, {"name": "export function sanitizeUser(user: IUser) { sanitizeUser", "description": "Removes sensitive fields from user object for safe exposure.", "scope": "", "scopeKind": ""}], "calls": ["jwt.sign", "getEnv", "User.findOne", "createUserWithPassword", "user.comparePassword", "user.save"], "search-terms": ["authService", "JWT_SECRET", "signup", "login", "generateToken"], "state": 2, "file_id": 24, "knowledge_revision": 51, "git_revision": "", "ctags": [{"_type": "tag", "name": "JWT_SECRET", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^  const { JWT_SECRET } = getEnv();$/", "language": "TypeScript", "kind": "constant", "scope": "generateToken", "scopeKind": "function"}, {"_type": "tag", "name": "err", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^    const err: any = new Error('Email already in use');$/", "language": "TypeScript", "kind": "constant", "scope": "signup", "scopeKind": "function"}, {"_type": "tag", "name": "err", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^    const err: any = new Error('Invalid email or password');$/", "language": "TypeScript", "kind": "constant", "scope": "login", "scopeKind": "function"}, {"_type": "tag", "name": "existing", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^  const existing = await User.findOne({ email: params.email });$/", "language": "TypeScript", "kind": "constant", "scope": "signup", "scopeKind": "function"}, {"_type": "tag", "name": "generateToken", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^export function generateToken(user: IUser): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^export async function login(params: { email: string; password: string }) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "ok", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^  const ok = await user.comparePassword(params.password);$/", "language": "TypeScript", "kind": "constant", "scope": "login", "scopeKind": "function"}, {"_type": "tag", "name": "payload", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^  const payload = {$/", "language": "TypeScript", "kind": "constant", "scope": "generateToken", "scopeKind": "function"}, {"_type": "tag", "name": "sanitizeUser", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^export function sanitizeUser(user: IUser) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "signup", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^export async function signup(params: { email: string; password: string; name?: string; role?: 'a/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^  const token = generateToken(user);$/", "language": "TypeScript", "kind": "constant", "scope": "login", "scopeKind": "function"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^  const token = generateToken(user);$/", "language": "TypeScript", "kind": "constant", "scope": "signup", "scopeKind": "function"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^  const user = await User.findOne({ email: params.email });$/", "language": "TypeScript", "kind": "constant", "scope": "login", "scopeKind": "function"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/authService.ts", "pattern": "/^  const user = await createUserWithPassword(User, params);$/", "language": "TypeScript", "kind": "constant", "scope": "signup", "scopeKind": "function"}], "hash": "2c3b6c9e61356c934b0e3ea57766bee5", "format-version": 4, "code-base-name": "frontend_dashboard", "filename": "backend_api/src/services/authService.ts", "revision_history": [{"51": ""}]}