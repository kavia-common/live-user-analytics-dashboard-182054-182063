{"is_source_file": true, "format": "TypeScript", "description": "This file defines a middleware function for Express.js that handles authentication via Clerk JWT tokens. It verifies incoming tokens, retrieves user details, assigns roles based on email, and attaches user info to the request object. It also handles error responses for unauthorized requests.", "external_files": ["../config/env.js", "../utils/debug.js"], "external_methods": ["verifyToken", "clerkClient.users.getUser"], "published": ["clerkAuthMiddleware"], "classes": [{"name": "AuthUser", "description": "Defines the structure of authenticated user information stored in the request."}], "methods": [{"name": "export async function clerkAuthMiddleware(req: Request, res: Response, next: NextFunction) { clerkAuthMiddleware", "description": "Express middleware that verifies Clerk JWT tokens, attaches user info, and handles authorization errors.", "scope": "", "scopeKind": ""}], "calls": ["getEnv", "debugLog", "verifyToken", "clerkClient.users.getUser"], "search-terms": ["clerk", "JWT verification", "Express middleware", "user role", "clerkAuth"], "state": 2, "file_id": 57, "knowledge_revision": 321, "git_revision": "d3a01222f86f38f4ab6741c5334a11af55b3ff49", "revision_history": [{"158": ""}, {"284": "2fa45b23bd36280c7df585c710dda7fb239ef0c2"}, {"310": "d3a01222f86f38f4ab6741c5334a11af55b3ff49"}, {"312": "d3a01222f86f38f4ab6741c5334a11af55b3ff49"}, {"321": "d3a01222f86f38f4ab6741c5334a11af55b3ff49"}], "ctags": [{"_type": "tag", "name": "ADMIN_EMAILS", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^  const { ADMIN_EMAILS, CLERK_SECRET_KEY } = getEnv();$/", "language": "TypeScript", "kind": "constant", "scope": "clerkAuthMiddleware", "scopeKind": "function"}, {"_type": "tag", "name": "AuthUser", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^export interface AuthUser {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "CLERK_SECRET_KEY", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^  const { ADMIN_EMAILS, CLERK_SECRET_KEY } = getEnv();$/", "language": "TypeScript", "kind": "constant", "scope": "clerkAuthMiddleware", "scopeKind": "function"}, {"_type": "tag", "name": "Express", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^  namespace Express {$/", "language": "TypeScript", "kind": "namespace"}, {"_type": "tag", "name": "Request", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^    interface Request {$/", "language": "TypeScript", "kind": "interface", "scope": "Express", "scopeKind": "namespace"}, {"_type": "tag", "name": "authHeader", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^    const authHeader = req.headers.authorization || '';$/", "language": "TypeScript", "kind": "constant", "scope": "clerkAuthMiddleware", "scopeKind": "function"}, {"_type": "tag", "name": "clerkAuthMiddleware", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^export async function clerkAuthMiddleware(req: Request, res: Response, next: NextFunction) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^    const email = user.emailAddresses.find(e => e.id === user.primaryEmailAddressId)?.emailAddre/", "language": "TypeScript", "kind": "constant", "scope": "clerkAuthMiddleware", "scopeKind": "function"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^  email: string;$/", "language": "TypeScript", "kind": "property", "scope": "AuthUser", "scopeKind": "interface"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^  id: string;$/", "language": "TypeScript", "kind": "property", "scope": "AuthUser", "scopeKind": "interface"}, {"_type": "tag", "name": "payload", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^    const payload = await verifyToken(token, { secretKey: CLERK_SECRET_KEY });$/", "language": "TypeScript", "kind": "constant", "scope": "clerkAuthMiddleware", "scopeKind": "function"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^    const role: 'admin' | 'user' =$/", "language": "TypeScript", "kind": "constant", "scope": "clerkAuthMiddleware", "scopeKind": "function"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^  role: 'admin' | 'user';$/", "language": "TypeScript", "kind": "property", "scope": "AuthUser", "scopeKind": "interface"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^    const token = authHeader.substring(7);$/", "language": "TypeScript", "kind": "constant", "scope": "clerkAuthMiddleware", "scopeKind": "function"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^      user?: AuthUser;$/", "language": "TypeScript", "kind": "property", "scope": "Express.Request", "scopeKind": "interface"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "pattern": "/^    const user = await clerkClient.users.getUser(payload.sub);$/", "language": "TypeScript", "kind": "constant", "scope": "clerkAuthMiddleware", "scopeKind": "function"}], "hash": "1cf16398406a38930878474f170553b4", "format-version": 4, "code-base-name": "frontend_dashboard", "filename": "frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/clerkAuth.ts", "fields": [{"name": "export interface AuthUser {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "interface Request {", "scope": "Express", "scopeKind": "namespace", "description": "unavailable"}, {"name": "email: string;", "scope": "AuthUser", "scopeKind": "interface", "description": "unavailable"}, {"name": "id: string;", "scope": "AuthUser", "scopeKind": "interface", "description": "unavailable"}, {"name": "role: 'admin' | 'user';", "scope": "AuthUser", "scopeKind": "interface", "description": "unavailable"}, {"name": "user?: AuthUser;", "scope": "Express.Request", "scopeKind": "interface", "description": "unavailable"}]}