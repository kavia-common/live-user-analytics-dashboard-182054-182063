{"is_source_file": true, "format": "TypeScript", "description": "This source file provides services related to user activity tracking, including creating activity events, normalizing device and location data, listing recent activities, and managing user sessions through event tracking functions.", "external_files": ["../models/ActivityEvent.js", "../models/Session.js"], "external_methods": ["ActivityEvent.prototype.save", "ActivityEvent.find", "ActivityEvent.findByIdAndUpdate", "ActivityEvent.create", "Session.findByIdAndUpdate", "Session.create"], "published": ["createActivity", "normalizeDevice", "normalizeLocation", "listRecentActivities", "trackEvent"], "classes": [], "methods": [{"name": "export async function createActivity(input: Partial<IActivityEvent>) { createActivity", "description": "Creates and saves a new activity event based on input data.", "scope": "", "scopeKind": ""}, {"name": "export function normalizeDevice(input: any = {}) { normalizeDevice", "description": "Normalizes device information into a consistent shape.", "scope": "", "scopeKind": ""}, {"name": "export function normalizeLocation(input: any = {}) { normalizeLocation", "description": "Normalizes location information into a consistent shape.", "scope": "", "scopeKind": ""}, {"name": "export async function listRecentActivities(limit = 50) { listRecentActivities", "description": "Retrieves the last N activity events ordered by occurrence time.", "scope": "", "scopeKind": ""}, {"name": "export async function trackEvent(params: { trackEvent", "description": "Handles different types of session and activity events such as session start/end, login, and page views, updating sessions and creating activity records accordingly.", "scope": "", "scopeKind": ""}, {"name": "function serializeActivity(a: IActivityEvent) { serializeActivity", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "function serializeSession(s: ISession) { serializeSession", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["ActivityEvent.find", "ActivityEvent.findByIdAndUpdate", "ActivityEvent.create", "Session.findByIdAndUpdate", "Session.create", "serializeActivity", "serializeSession"], "search-terms": ["activity tracking", "session management", "normalize device location", "activity service functions"], "state": 2, "file_id": 26, "knowledge_revision": 350, "git_revision": "6241b6678d4ba4937d8c14a0c734b886660ccbf2", "revision_history": [{"53": ""}, {"350": "6241b6678d4ba4937d8c14a0c734b886660ccbf2"}], "ctags": [{"_type": "tag", "name": "createActivity", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^export async function createActivity(input: Partial<IActivityEvent>) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "created", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^  const created = await ActivityEvent.create({$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "device", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^  const device = normalizeDevice(params.device);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "ev", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^  const ev = new ActivityEvent({$/", "language": "TypeScript", "kind": "constant", "scope": "createActivity", "scopeKind": "function"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^  const items = await ActivityEvent.find().sort({ occurredAt: -1 }).limit(limit);$/", "language": "TypeScript", "kind": "constant", "scope": "listRecentActivities", "scopeKind": "function"}, {"_type": "tag", "name": "listRecentActivities", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^export async function listRecentActivities(limit = 50) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "location", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^  const location = normalizeLocation(params.location);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "normalizeDevice", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^export function normalizeDevice(input: any = {}) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "normalizeLocation", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^export function normalizeLocation(input: any = {}) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "occurredAt", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^  const occurredAt = params.timestamp ? new Date(params.timestamp) : new Date();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "serializeActivity", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^function serializeActivity(a: IActivityEvent) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "serializeSession", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^function serializeSession(s: ISession) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "sessionDoc", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^      const sessionDoc = await Session.findByIdAndUpdate($/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "sessionDoc", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^    let sessionDoc: ISession | null = null;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "trackEvent", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/services/activityService.ts", "pattern": "/^export async function trackEvent(params: {$/", "language": "TypeScript", "kind": "function"}], "hash": "5ada942180390d0225b1c061d5c4ac04", "format-version": 4, "code-base-name": "frontend_dashboard", "filename": "backend_api/src/services/activityService.ts", "fields": [{"name": "let sessionDoc: ISession | null = null;", "scope": "", "scopeKind": "", "description": "unavailable"}]}