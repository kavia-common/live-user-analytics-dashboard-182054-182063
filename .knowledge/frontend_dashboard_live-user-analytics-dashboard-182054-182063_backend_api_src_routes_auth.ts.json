{"is_source_file": true, "format": "TypeScript", "description": "This file defines Express.js routes related to authentication, including signup, login, and user info retrieval. It handles API endpoints under /api/auth, manages middleware integration, input validation with Joi, and calls to authService functions.", "external_files": ["../middleware/clerkAuth.js", "../middleware/auth.js", "../services/authService.js", "../utils/debug.js", "../config/env.js"], "external_methods": ["clerkAuthMiddleware", "authMiddleware", "signup", "login", "getEnv", "debugLog", "debugError", "logMongoStatus"], "published": ["router"], "classes": [], "methods": [{"name": "POST /signup", "description": "Handles user signup requests, validating input, and calling authService.signup. Only active when LOCAL_JWT_AUTH environment variable is true."}, {"name": "POST /login", "description": "Handles user login requests, validating input, and calling authService.login. Only active when LOCAL_JWT_AUTH environment variable is true."}, {"name": "GET /me", "description": "Returns current user information based on Clerk session, using middleware for authentication."}], "calls": ["signup(value)", "login(value)"], "search-terms": ["auth routes", "signup endpoint", "login endpoint", "user info route", "clerk middleware", "Joi validation", "express router", "local auth dev only"], "state": 2, "file_id": 65, "knowledge_revision": 285, "git_revision": "2fa45b23bd36280c7df585c710dda7fb239ef0c2", "revision_history": [{"176": ""}, {"285": "2fa45b23bd36280c7df585c710dda7fb239ef0c2"}], "ctags": [{"_type": "tag", "name": "LOCAL_JWT_AUTH", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/auth.ts", "pattern": "/^const { LOCAL_JWT_AUTH } = getEnv();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/auth.ts", "pattern": "/^  const { error, value } = schema.validate(req.body);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/auth.ts", "pattern": "/^    const result = await login(value);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/auth.ts", "pattern": "/^    const result = await signup(value);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/auth.ts", "pattern": "/^const router = Router();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "schema", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/auth.ts", "pattern": "/^  const schema = Joi.object({$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/auth.ts", "pattern": "/^  const user = req.user!;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "value", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/auth.ts", "pattern": "/^  const { error, value } = schema.validate(req.body);$/", "language": "TypeScript", "kind": "constant"}], "hash": "62222f5a6607a194a5527c6fe10e7865", "format-version": 4, "code-base-name": "frontend_dashboard", "filename": "frontend_dashboard/live-user-analytics-dashboard-182054-182063/backend_api/src/routes/auth.ts"}