{"is_source_file": true, "format": "TypeScript", "description": "This file defines a centralized error-handling middleware for an Express-based Node.js application, formatting errors and preventing internal information leakage.", "external_files": ["express"], "external_methods": ["Request", "Response", "NextFunction"], "published": ["errorHandler"], "classes": [], "methods": [{"name": "export function errorHandler(err: any, _req: Request, res: Response, _next: NextFunction) { errorHandler", "description": "Express middleware function that handles errors, formats them, logs the error details, and sends a JSON response with error information.", "scope": "", "scopeKind": ""}], "calls": ["console.error", "res.status", "res.json"], "search-terms": ["error middleware", "express errorHandler", "centralized error handling", "error formatting", "error logging"], "state": 2, "file_id": 23, "knowledge_revision": 47, "git_revision": "", "ctags": [{"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/error.ts", "pattern": "/^  const details = err.details || undefined;$/", "language": "TypeScript", "kind": "constant", "scope": "errorHandler", "scopeKind": "function"}, {"_type": "tag", "name": "errorHandler", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/error.ts", "pattern": "/^export function errorHandler(err: any, _req: Request, res: Response, _next: NextFunction) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/error.ts", "pattern": "/^  const message = err.message || 'Internal Server Error';$/", "language": "TypeScript", "kind": "constant", "scope": "errorHandler", "scopeKind": "function"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/live-user-analytics-dashboard-182054-182063/backend_api/src/middleware/error.ts", "pattern": "/^  const status = err.statusCode || err.status || 500;$/", "language": "TypeScript", "kind": "constant", "scope": "errorHandler", "scopeKind": "function"}], "hash": "71376b139d3d10b794ec7f44c759624e", "format-version": 4, "code-base-name": "frontend_dashboard", "filename": "backend_api/src/middleware/error.ts", "revision_history": [{"47": ""}]}